for(r in 1:4){for(s in 1:nSamples){for(n in 1:nSampleRows[s,r]){if(is.na(sampleRows[n,s,r]){print('bummer')}}}}
for(r in 1:4){for(s in 1:nSamples){for(n in 1:nSampleRows[s,r]){if(is.na(sampleRows[n,s,r])){print('bummer')}}}}
for(r in 1:4){for(s in 1:nSamples){for(n in 1:nSampleRows[s,r]){if(is.null(sampleRows[n,s,r])){print('bummer')}}}}
dim(sampleRows)
dim(nSampleRows)
source('C:/Users/Evan/Desktop/Conte/westbrookJS/results/summarize.R', echo=TRUE)
d
makeDMData()
source('C:/Users/Evan/Desktop/Conte/makeDMData/data_prep/dMDataFunctionFromDB.R', echo=TRUE)
makeDMData()
d
d[780000:780188]
print(d[780000:780188],nrow=189)
d[zKnown==2 & sampleNumAdj<6]
d[zKnown==3 & sampleNumAdj<6]
d[zKnown==3 & sampleNumAdj<6]
knowns <- function(samplesInData,cohort,last){
if(cohort<min(samples$year)){born<-2
} else {
born <- samples[year==cohort & season == 2, sampleNumAdj]
}
unknownAfter <- samples[sampleNum==last,sampleNumAdj]
z<-rep(NA,max(samplesInData))
z[samplesInData < born] <- 1 #sets state to not entered before birth
z[samplesInData >= born & samplesInData <= unknownAfter] <- 2 #alive when known
z[samplesInData-born >=4 & z==2]<-3
return(z)
}
dMData
dMData[cohort==1999]
with(dMData[tag=='1bf0fe8f47 '],knowns(sampleNumAdj,unique(cohort),unique(last)))
nSamples <- dMData[,max(sampleNumAdj)]
samples <- dMData[,list(sampleNumAdj,sampleNum,season,year)]
setkey(samples,sampleNumAdj,sampleNum,season,year)
samples<-unique(samples)
with(dMData[tag=='1bf0fe8f47 '],knowns(sampleNumAdj,unique(cohort),unique(last)))
samples$year
dMData[tag=='1bf0fe8f47 ',cohort]
names(dMData)
dMData[tag=='1bf0fe8f47 ',river]
dMData[tag=='1bf0fe8f47 ']
dMData[cohort==1999]
with(dMData[tag=='1bf0fe8f47'],knowns(sampleNumAdj,unique(cohort),unique(last)))
with(dMData[tag=='1bf18b701b'],knowns(sampleNumAdj,unique(cohort),unique(last)))
knowns <- function(samplesInData,cohort,last){
if(cohort<min(samples$year)){born<-1-(cohort-min(samples$year))*4
} else {
born <- samples[year==cohort & season == 2, sampleNumAdj]
}
unknownAfter <- samples[sampleNum==last,sampleNumAdj]
z<-rep(NA,max(samplesInData))
z[samplesInData < born] <- 1 #sets state to not entered before birth
z[samplesInData >= born & samplesInData <= unknownAfter] <- 2 #alive when known
z[samplesInData-born >=4 & z==2]<-3
return(z)
}
with(dMData[tag=='1bf18b701b'],knowns(sampleNumAdj,unique(cohort),unique(last)))
dMData[tag=='1bf18b701b',list(sampleNumAdj,cohort,last)]
born<-1-(cohort-min(samples$year))*4
born<-1-(1999-min(samples$year))*4
born
knowns <- function(samplesInData,cohort,last){
if(cohort<min(samples$year)){born<-1+(cohort-min(samples$year))*4
} else {
born <- samples[year==cohort & season == 2, sampleNumAdj]
}
unknownAfter <- samples[sampleNum==last,sampleNumAdj]
z<-rep(NA,max(samplesInData))
z[samplesInData < born] <- 1 #sets state to not entered before birth
z[samplesInData >= born & samplesInData <= unknownAfter] <- 2 #alive when known
z[samplesInData-born >=4 & z==2]<-3
return(z)
}
dMData[tag=='1bf18b701b',knowns(sampleNumAdj,cohort,last)]
dMData[tag=='1bf18b701b',knowns(sampleNumAdj,unique(cohort),unique(last))]
?run.jags
library(runjags)
install.packages('runjags')
out
sims
dim(sims$gamma)
makeDMData()
source('C:/Users/Evan/Desktop/Conte/westbrookJS/runJSOsensei.R', echo=TRUE)
8/3
8/3*60
d
hist(d$sampleNumAdj)
hist(d[enc==1,sampleNumAdj])
hist(d[enc==1,sampleNumAdj],breaks=seq(1,56,1))
hist(d[zKnown!=1,sampleNumAdj],breaks=seq(1,56,1))
hist(d[zKnown %in% c(2,3),sampleNumAdj],breaks=seq(1,56,1))
source('C:/Users/Evan/Desktop/Conte/westbrookJS/summarize.R', echo=TRUE)
source('C:/Users/Evan/Desktop/Conte/westbrookJS/summarize.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?grep
grep('n','nyoy')
grep('n','yoy')
grepl('n','yoy')
source('~/.active-rstudio-document', echo=TRUE)
nYoy
plot(mean~sample,ylim=c(0,max(upper)))
plot(mean~sample,ylim=c(0,max(upper)),data=nYoy)
dev.off()
dev.off()
plot(mean~sample,ylim=c(0,max(upper)),data=nYoy)
ifelse(grepl('n',i),c(0,max(upper)),c(0,1.1))
grepl('n',i)
plot(mean~sample,data=get(i)[river==r],
pch=19,col=palette()[season],
ylim=if(grepl('n',i)) c(0,max(upper)) else c(0,1.1),
main=rivers[r],xlab="",ylab=i)
source('~/.active-rstudio-document', echo=TRUE)
dev.off()
dev.off()
dev.off()
source('~/.active-rstudio-document', echo=TRUE)
warnings()
samples
load("~/westbrookJS/results/outJS.rDATA")
load("~/westbrookJS/dMDataOutbkt1996_2014.rDATA")
evalList$samples
samples<-evalList$samples
source('~/.active-rstudio-document', echo=TRUE)
nYoy
samples
class(samples)
for(i in toSummarize){
assign(i,summarize(sims[[i]]))
setkey(get(i),sample,river)
assign(i,get(i)[samples[,list(sampleNumAdj,year)]])
}
nYoy
samples<-evalList$samples[,list(sampleNumAdj,year)]
setkey(samples,sampleNumAdj)
for(i in toSummarize){
assign(i,summarize(sims[[i]]))
setkey(get(i),sample,river)
assign(i,samples[get(i)]])
}
for(i in toSummarize){
assign(i,summarize(sims[[i]]))
setkey(get(i),sample,river)
assign(i,samples[get(i)])
}
nYoy
plot
source('~/.active-rstudio-document', echo=TRUE)
plotError(year,mean,upper.y=upper,lower.y=lower,interval.type='asdf',data=nYoy)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plotError(year,mean,upper.y=upper,lower.y=lower,interval.type='asdf',data=nYoy)
?arrows
arrows
source('~/.active-rstudio-document', echo=TRUE)
plotError(year,mean,upper.y=upper,lower.y=lower,interval.type='asdf',data=nYoy)
warnings()
arrows
source('~/.active-rstudio-document', echo=TRUE)
plotError(year,mean,upper.y=upper,lower.y=lower,interval.type='asdf',data=nYoy)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
warnings()
plotError(year,mean,upper.y=upper,lower.y=lower,interval.type='asdf',data=nYoy)
?supressWarnings
source('~/.active-rstudio-document', echo=TRUE)
plotError(year,mean,upper.y=upper,lower.y=lower,interval.type='asdf',data=nYoy)
plotError <- function(x=data[,x], y=data[,y],data, upper.y=NULL,
lower.y=upper.y,upper.x=NULL,lower.x=upper.x,
length=0.03,x.bar=F,y.bar=T,interval.type="dist",zero.truncate=F,...){
source('~/.active-rstudio-document', echo=TRUE)
plotError(year,mean,upper.y=upper,lower.y=lower,interval.type='asdf',data=nYoy)
plotError(year,upper,upper.y=upper,lower.y=lower,interval.type='asdf',data=nYoy)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/plotError.R', echo=TRUE)
source('~/R/plotError.R', echo=TRUE)
plotError <- function(x=data[,x], y=data[,y],data, upper.y=NULL,
lower.y=upper.y,upper.x=NULL,lower.x=upper.x,
length=0.03,x.bar=F,y.bar=T,interval.type="dist",zero.truncate=F,...){
plot(y~x,...)
if(y.bar==T){
if(length(x) != length(y) | length(y) !=length(lower.y) |
length(lower.y) != length(upper.y))
{stop("vectors must be same length")}
if(interval.type=="dist"){
upper.y<-y+upper.y
lower.y<-y-lower.y
}
if(zero.truncate==T){
for(i in 1:length(lower.y)){
lower.y[i]<-max(0,lower.y[i])
}}
suppressWarnings(arrows(x,upper.y,x,lower.y, angle=90,
code=3, length=length, ...))}
if(x.bar==T){
if(length(x) != length(y) | length(y) !=length(lower.x) |
length(lower.x) != length(upper.x))
{stop("vectors must be same length")}
if(interval.type=="dist"){
upper.x<-x+upper.x
lower.x<-x-lower.x
}
suppressWarnings(arrows(upper.x,y,lower.x,y,angle=90,code=3,length=length,...))
}
}
plotError(sample,mean,data=nYoy,upper.y=upper,lower.y=lower,interval.type='asdf')
data
nYoy
?attach
nYoy[,NULL]
is.null(nYoy)
is.null(data)
data
get(data)
data
is.object(data)
is.object(nYoy)
is.object(NULL)
source('~/.active-rstudio-document', echo=TRUE)
plotError("sample","mean",data=nYoy,upper.y="upper",lower.y='lower',interval.type='asedf')
nYoy
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y='lower',interval.type='asedf')
y
source('~/.active-rstudio-document', echo=TRUE)
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y='lower',interval.type='asedf')
y
is.vector(y)
nYoy[[x]]
nYoy[['sampleNumAdj']]
source('~/.active-rstudio-document', echo=TRUE)
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y='lower',interval.type='asedf')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y='lower',interval.type='asedf')
?plot
source('~/.active-rstudio-document', echo=TRUE)
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y='lower',interval.type='asedf')
plotError(sampleNumAdj,mean,data=nYoy,upper.y=upper,lower.y=lower,interval.type='asedf')
plot(sampleNumAdj,mean,data=nYoy)
plot(mean~sampleNumAdj,data=nYoy)
plotBla<-function(x,y,...){plot(y~x,...)}
plotBla(mean~sampleNumAdj,data=nYoy)
plotBla(mean,sampleNumAdj,data=nYoy)
lm
source('~/.active-rstudio-document', echo=TRUE)
plotError(sampleNumAdj,mean,data=nYoy,upper.y=upper,lower.y=lower,interval.type='asedf')
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y='lower',interval.type='asedf')
nYoy
warnings()
plotError <- function(x, y, upper.y=NULL,data=NULL,
lower.y=upper.y,upper.x=NULL,lower.x=upper.x,
length=0.03,x.bar=F,y.bar=T,interval.type="dist",zero.truncate=F,...){
if(is.object(data)){
x<-data[[x]]
y<-data[[y]]
if(!is.null(upper.y)){upper.y<-data[[upper.y]]}
if(!is.null(lower.y)){lower.y<-data[[lower.y]]}
if(!is.null(upper.x)){upper.x<-data[[upper.x]]}
if(!is.null(lower.x)){lower.x<-data[[lower.x]]}
}
plot(y~x,...)
if(y.bar==T){
if(length(x) != length(y) | length(y) !=length(lower.y) |
length(lower.y) != length(upper.y))
{stop("vectors must be same length")}
if(interval.type=="dist"){
upper.y<-y+upper.y
lower.y<-y-lower.y
}
if(zero.truncate==T){
for(i in 1:length(lower.y)){
lower.y[i]<-max(0,lower.y[i])
}}
suppressWarnings(arrows(x,upper.y,x,lower.y, angle=90,
code=3, length=length, ...))}
if(x.bar==T){
if(length(x) != length(y) | length(y) !=length(lower.x) |
length(lower.x) != length(upper.x))
{stop("vectors must be same length")}
if(interval.type=="dist"){
upper.x<-x+upper.x
lower.x<-x-lower.x
}
suppressWarnings(arrows(upper.x,y,lower.x,y,angle=90,code=3,length=length,...))
}
}
source('~/.active-rstudio-document', echo=TRUE)
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y="lower",interval.type='asdf')
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y="lower",interval.type='difference')
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y="lower",interval.type='diff')
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y="lower",interval.type='distance')
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y="lower",interval.type='dist')
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y="lower",interval.type='asdf')
plotError("sampleNumAdj","mean",data=nYoy,upper.y="upper",lower.y="lower",interval.type='asdf',pch=19)
plotError("year","mean",data=nYoy[year>=2002 & season==3],
upper.y="upper",lower.y="lower",pch=19)
r=1
plotError("year","mean",
data=nYoy[year>=2002 & season==3 & river==r],
upper.y="upper",lower.y="lower",pch=19)
is.null(ylim)
is.object(ylim)
source('~/.active-rstudio-document', echo=TRUE)
plotError("year","mean",
data=nYoy[year>=2002 & season==3 & river==r],
upper.y="upper",lower.y="lower",pch=19,
ylim=c())
source('~/R/plotError.R', echo=TRUE)
plotError <- function(x, y, upper.y=NULL,data=NULL,
lower.y=upper.y,upper.x=NULL,lower.x=upper.x,
length=0.03,x.bar=F,y.bar=T,interval.type="dist",
zero.truncate=F,ylim=NULL,...){
if(is.object(data)){
x<-data[[x]]
y<-data[[y]]
if(!is.null(upper.y)){upper.y<-data[[upper.y]]}
if(!is.null(lower.y)){lower.y<-data[[lower.y]]}
if(!is.null(upper.x)){upper.x<-data[[upper.x]]}
if(!is.null(lower.x)){lower.x<-data[[lower.x]]}
}
if(interval.type=="dist" & y.bar==T){
upper.y<-y+upper.y
lower.y<-y-lower.y
}
if(interval.type=="dist" & x.bar==T){
upper.x<-x+upper.x
lower.x<-x-lower.x
}
if(is.null(ylim)){
ylim=c(min(lower.y),max(upper.y))
}
plot(y~x,ylim=ylim,...)
if(y.bar==T){
if(length(x) != length(y) | length(y) !=length(lower.y) |
length(lower.y) != length(upper.y))
{stop("vectors must be same length")}
if(zero.truncate==T){
for(i in 1:length(lower.y)){
lower.y[i]<-max(0,lower.y[i])
}}
suppressWarnings(arrows(x,upper.y,x,lower.y, angle=90,
code=3, length=length, ...))}
if(x.bar==T){
if(length(x) != length(y) | length(y) !=length(lower.x) |
length(lower.x) != length(upper.x))
{stop("vectors must be same length")}
suppressWarnings(arrows(upper.x,y,lower.x,y,angle=90,code=3,length=length,...))
}
}
plotError("year","mean",
data=nYoy[year>=2002 & season==3 & river==r],
upper.y="upper",lower.y="lower",pch=19)
source('~/.active-rstudio-document', echo=TRUE)
plotError("year","mean",
data=nYoy[year>=2002 & season==3 & river==r],
upper.y="upper",lower.y="lower",
interval.type='absolute',
pch=19,xlab="",ylab='N YOY')
plotError("year","mean",
data=nYoy[year>=2002 & season==3 & river==r],
upper.y="upper",lower.y="lower",
interval.type='absolute',
pch=19,xlab="",ylab='N YOY',bty='l')
plotError("year","mean",
data=nYoy[year>=2002 & season==3 & river==r],
upper.y="upper",lower.y="lower",
interval.type='absolute',
pch=19,xlab="",ylab='N YOY',bty='l',type='b')
r
r=1
plotError("year","mean",
data=nYoy[year>=2002 & season==3 & river==r],
upper.y="upper",lower.y="lower",
interval.type='absolute',
pch=19,xlab="",ylab='N YOY',bty='l',type='b')
source('C:/Users/Evan/Desktop/Conte/westbrookJS/results/plotN.R', echo=TRUE)
tiff.par("~/westbrookJS/results/nFallYoy.tif",
mfrow=c(4,1))
for(r in 1:4){
plotError("year","mean",
data=nYoy[year>=2002 & season==3 & river==r],
upper.y="upper",lower.y="lower",
interval.type='absolute',
pch=19,xlab="",ylab='N YOY',
bty='l',type='b',col=palette()[r])
}
dev.off()
sims$psi
density.plot(sims$psi)
density(sims$psi)
plot(density(sims$psi))
dim(sims$nYoy)
plot(density(sims$nYoy[,20,1]))
plot(density(sims$nYoy[,20,2]))
plot(density(sims$nYoy[,20,3]))
plot(density(sims$nYoy[,25,3]))
plot(density(sims$nYoy[,35,3]))
plot(density(sims$nYoy[,45,3]))
traceplot(out)
evalList$sampleRows
makeDMData()
source('C:/Users/Evan/Desktop/Conte/westbrookJS/summarize.R', echo=TRUE)
source('C:/Users/Evan/Desktop/Conte/westbrookJS/summarize.R', echo=TRUE)
source('C:/Users/Evan/Desktop/Conte/westbrookJS/results/plotN.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dev.off()
dev.off()
dev.off()
source('~/.active-rstudio-document', echo=TRUE)
sims
plot(density(sims$psi))
source('C:/Users/Evan/Desktop/Conte/westbrookJS/summarize.R', echo=TRUE)
ou
out
plot(density(sims$psi))
sims$b
dim(sims$b)
summarize(sims$b)
b
b<-summarize(sims$b)
b
plotError("sample","mean",upper.y="upper",lower.y="lower",interval.type="asdf",data=b)
plotError("sample","mean",upper.y="upper",lower.y="lower",interval.type="asdf",data=b,ylim=c(0,0.1))
plotError("sample","mean",upper.y="upper",lower.y="lower",interval.type="asdf",data=b[sample !=1],ylim=c(0,0.1))
plotError("sample","mean",upper.y="upper",lower.y="lower",interval.type="asdf",data=b[sample !=1]
)
source('C:/Users/Evan/Desktop/Conte/westbrookJS/summarize.R', echo=TRUE)
d
load("~/westbrookJS/dMDataOutbkt1996_2014.rDATA")
source('~/.active-rstudio-document', echo=TRUE)
d$tag
dMData[is.na(river)]
a<-dMData[,length(unique(tag)),by=list(riverN,cohort)]
a
unique(dMData$river)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rivers
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dev.off()
source('~/.active-rstudio-document', echo=TRUE)
dev.off()
dMData$cohort
source('~/.active-rstudio-document', echo=TRUE)
pAdult
?saveRDS
source('~/.active-rstudio-document', echo=TRUE)
warnings()
?jags.model
source('~/.active-rstudio-document', echo=TRUE)
results
obear<-data.table(var=NA,mean=1,lower=1,upper=1,parameter='pAdult',
sample=pAdult[river==1,sample],
river=3,
season=pAdult[river==1,season],
year=pAdult[river==1,year]
)
obear
pAdult<-rbind(pAdult,obear)
pAdult
source('~/.active-rstudio-document', echo=TRUE)
pAdult
pAdult[river==4]
load("~/westbrookJS/resultsBnt/outJS.rDATA")
outArray<-as.array(out)
summarize<-function(x,margin=c(2)){
getSummary<-function(x){
meanX<-mean(x)
quantiles<-quantile(x,c(0.025,0.975))
return(c(meanX,quantiles))
}
stringSplit<-function(x,split,element){
sapply(strsplit(x,split), "[[", element)
}
result<-data.table(dcast(melt(apply(x,MARGIN=margin,FUN=getSummary)),
var~Var1))
setnames(result,c("var","mean","lower","upper"))
result[,var:=as.character(var)]
result[,parameter:=unlist(strsplit(var,"[[]"))[seq(1,nrow(result)*2-1,2)]]
result[grep(",",var),
sample:=stringSplit(stringSplit(var,"[[]",2),",",1)]
result[,river:=substr(var,start=nchar(var)-1,stop=nchar(var)-1)]
result[,sample:=as.numeric(sample)]
return(result)
}
results<-summarize(outArray)
setkey(results,parameter,river,sample)
results[,
(sample/4-floor(sample/4))*4]
source('C:/Users/Evan/Desktop/Conte/westbrookJS/summarizeBnt.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
pAdult
pAdult[,year:=cieling(sample/4)+2000]
pAdult[,year:=ceiling(sample/4)+2000]
results[,year:=ceiling(sample/4)+2000]
source('~/.active-rstudio-document', echo=TRUE)
results
hist(results$year)
hist(results$year)
source('C:/Users/Evan/Desktop/Conte/westbrookJS/summarize.R', echo=TRUE)
source('C:/Users/Evan/Desktop/Conte/westbrookJS/summarizeBnt.R', echo=TRUE)
outArray
dim(outArray)
dimnames(outArray)
traceplot(out)
outArray<-as.array(out)
dim(outArray)
results
results$parameter
for(i in 169:504){plot(density(outArray[,i,]))}
